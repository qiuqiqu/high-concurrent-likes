<?xml version="1.0" encoding="UTF-8"?>
<!--
scan,当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod,设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug,当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration debug="false" scan="true" scanPeriod="1 seconds">
	<!-- 日志存放路径 -->
	<property name="log.path" value="./logs"/>
	<!-- 日志输出格式 -->
	<property name="log.pattern"
			  value="%red(%date{yyyy-MM-dd HH:mm:ss:SSS}) %highlight(%-5level) %boldYellow([%thread]) %boldMagenta(%logger{50}.%line) %cyan(%msg%n)"/>
	<!-- 控制台输出 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>

	<!-- 系统日志输出 -->
	<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}/sys-info.log</file>
		<!-- 循环政策：基于时间创建日志文件 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 日志文件名格式 -->
			<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!-- 日志最大的历史 60天 -->
			<maxHistory>7</maxHistory>
			<!--单文件大小-->
			<maxFileSize>1GB</maxFileSize>
			<!--用来指定日志文件的上线大小,那么到了这个值,就会删除旧的日志-->
			<totalSizeCap>5GB</totalSizeCap>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 过滤的级别 -->
			<level>info</level>
			<!--&lt;!&ndash; 匹配时的操作：接收（记录） &ndash;&gt;-->
			<!--<onMatch>ACCEPT</onMatch>-->
			<!--&lt;!&ndash; 不匹配时的操作：拒绝（不记录） &ndash;&gt;-->
			<!--<onMismatch>DENY</onMismatch>-->
		</filter>
	</appender>

	<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}/sys-error.log</file>
		<!-- 循环政策：基于时间创建日志文件 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 日志文件名格式 -->
			<fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<!-- 日志最大的历史 60天 -->
			<maxHistory>7</maxHistory>
			<!--单文件大小-->
			<maxFileSize>100MB</maxFileSize>
			<!--用来指定日志文件的上线大小,那么到了这个值,就会删除旧的日志-->
			<totalSizeCap>1GB</totalSizeCap>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<!-- 过滤方式：匹配过滤，对匹配到的日志执行匹配策略 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 匹配的级别 -->
			<level>ERROR</level>
			<!-- 匹配时的操作：接收（记录） -->
			<onMatch>ACCEPT</onMatch>
			<!-- 不匹配时的操作：拒绝（不记录） -->
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 系统模块日志级别控制  -->
	<logger name="com.gy" level="debug"/>

	<!-- Spring日志级别控制  -->
	<logger name="org.springframework" level="info" additivity="false"/>
	<logger name="org.apache" level="warn" additivity="false"/>

	<!--必填项，优先级低于logger，基础日志级别-->
	<root level="debug">
		<appender-ref ref="file_info"/>
		<appender-ref ref="file_error"/>
		<appender-ref ref="console"/>
	</root>
</configuration> 
